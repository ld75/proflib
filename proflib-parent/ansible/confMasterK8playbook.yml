- hosts: "172.17.0.2"
  become: yes
  tasks:
    - name: TASK 2 Initialize Kubernetes Cluster initialize the cluster
      shell: kubeadm init --apiserver-advertise-address=172.17.0.2 --pod-network-cidr=192.168.0.0/16
      #kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: TASK 3 Deploy Calico network create .kube directory. INSTALLATION DE CALICO (voirhttps://projectcalico.docs.tigera.io/getting-started/kubernetes/) Execute the following commands to configure kubectl (also returned by kubeadm init).
      become: yes
      become_user: kube
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/kube/.kube/config
        remote_src: yes
        owner: kube

    - name: Install the Tigera Calico operator and custom resource definitions. install Pod network Install Calico by creating the necessary custom resource. For more information on configuration options available in this manifest
      become: yes
      become_user: kube
#      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      shell: |
              kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
              kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml
      args:
        chdir: $HOME

    - name: verifier que maintenant les pods calico doivent tourner. Remove the taints on the master so that you can schedule pods on it.It should return the following node/<your-hostname> untainted
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-
    - name: Confirm that you now have a node in your cluster with the following command. It should return your cluster description
      shell: kubectl get nodes -o wide


    - name: TASK 4 Generate and save cluster join command to /joincluster.sh COMMANDE EXECUTEE sur tous les clusters(workers) pour les joindre tous Get the token for joining the worker nodes
      become: yes
      become_user: kube
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - name: debbugage
      debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777